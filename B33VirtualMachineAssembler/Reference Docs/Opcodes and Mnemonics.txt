Mnemonic	Opcode		Addressing Mode		# of bytes (including opcode)
----------------------------------------------------------------------------------------------------------------------
END			$00			NONE				1 Byte  (opcode)
LDA			$01			IMMEDIATE			2 Bytes (opcode + 8-bit number)
LDB			$02			IMMEDIATE			2 Bytes (opcode + 8-bit number)
LDX			$03			IMMEDIATE			3 Bytes (opcode + 16-bit number)
LDY			$04			IMMEDIATE			3 Bytes (opcode + 16-bit number)
LDD			$05			IMMEDIATE			3 Bytes (opcode + 16-bit number)
STA			$06			EXTENDED			3 Bytes (opcode + 16-bit number)
STB			$07			EXTENDED			3 Bytes (opcode + 16-bit number)
STX			$08			EXTENDED			3 Bytes (opcode + 16-bit number)
STY			$09			EXTENDED			3 Bytes (opcode + 16-bit number)
STD			$0A			EXTENDED			3 Bytes (opcode + 16-bit number)
LDA			$0B			EXTENDED			3 Bytes (opcode + 16-bit number)
LDB			$0C			EXTENDED			3 Bytes (opcode + 16-bit number)
LDX			$0D			EXTENDED			3 Bytes (opcode + 16-bit number)
LDY			$0E			EXTENDED			3 Bytes (opcode + 16-bit number)
LDD			$0F			EXTENDED			3 Bytes (opcode + 16-bit number)
STA			$10			INDEXED				3 Bytes (opcode + register offset + register)
STB			$11			INDEXED				3 Bytes (opcode + register offset + register)
CMPA		$12			IMMEDIATE			2 Bytes (opcode + 8-bit number)
CMPB		$13			IMMEDIATE			2 Bytes (opcode + 8-bit number)
CMPD		$14			IMMEDIATE			3 Bytes (opcode + 16-bit number)
CMPX		$15			IMMEDIATE			3 Bytes (opcode + 16-bit number)
CMPY		$16			IMMEDIATE			3 Bytes (opcode + 16-bit number)
JEQ			$17			IMMEDIATE			3 Bytes (opcode + 16-bit number)
JNE			$18			IMMEDIATE			3 Bytes (opcode + 16-bit number)
LDA			$19			INDEXED				3 Bytes (opcode + register offset + register)
LDB			$1A			INDEXED				3 Bytes (opcode + register offset + register)
JGE			$20			IMMEDIATE			3 Bytes (opcode + 16-bit number)
JLE			$21			IMMEDIATE			3 Bytes (opcode + 16-bit number)
JLT			$22			IMMEDIATE			3 Bytes (opcode + 16-bit number)
JGT			$23			IMMEDIATE			3 Bytes (opcode + 16-bit number)
JMP			$24			IMMEDIATE			3 Bytes (opcode + 16-bit number)
PUSH		$25			REGISTER			2 Bytes (opcode + register)
POP			$26			REGISTER			2 Bytes (opcode + register)
CALL		$27			IMMEDIATE			3 Bytes (opcode + 16-bit number)
RET			$28			NONE				1 Byte (opcode)
SUBA		$2A			IMMEDIATE			2 Bytes (opcode + 8-bit number)
SUBB		$2B			IMMEDIATE			2 Bytes (opcode + 8-bit number)
SUBD		$2C			IMMEDIATE			3 Bytes (opcode + 16-bit number)
SUBX		$2D			IMMEDIATE			3 Bytes (opcode + 16-bit number)
SUBY		$2E			IMMEDIATE			3 Bytes (opcode + 16-bit number)
ADDA		$2F			IMMEDIATE			2 Bytes (opcode + 8-bit number)
ADDB		$30			IMMEDIATE			2 Bytes (opcode + 8-bit number)
ADDD		$31			IMMEDIATE			3 Bytes (opcode + 16-bit number)
ADDX		$32			IMMEDIATE			3 Bytes (opcode + 16-bit number)
ADDY		$33			IMMEDIATE			3 Bytes (opcode + 16-bit number)
SUBA		$34			REGISTER			2 Bytes (opcode + register)
SUBB		$35			REGISTER			2 Bytes (opcode + Register)
SUBD		$36			REGISTER			2 Bytes (opcode + Register)
SUBX		$37			REGISTER			2 Bytes (opcode + Register)
SUBY		$38			REGISTER			2 Bytes (opcode + register)
ADDA		$39			REGISTER			2 Bytes (opcode + register)
ADDB		$3A			REGISTER			2 Bytes (opcode + register)
ADDD		$3B			REGISTER			2 Bytes (opcode + register)
ADDX		$3C			REGISTER			2 Bytes (opcode + register)
ADDY		$3D			REGISTER			2 Bytes (opcode + register)
TFR			$3E			REGISTER			3 Bytes (opcode + register + register)
CMPA		$3F			REGISTER			2 Bytes (opcode + register)
CMPB		$40			REGISTER			2 Bytes (opcode + register)
CMPD		$41			REGISTER			2 Bytes (opcode + register)
CMPX		$42			REGISTER			2 Bytes (opcode + register)
CMPY		$43			REGISTER			2 Bytes (opcode + register)
LSFT		$44			REGISTER			2 Bytes (opcode + register)
RSFT		$45			REGISTER			2 Bytes (opcode + register)
JOS			$46			IMMEDIATE			3 Bytes (opcode + 16-bit number)
JOC			$47			IMMEDIATE			3 Bytes (opcode + 16-bit number)
MUL8		$48			REGISTER			3 Bytes (opcode + register + register) (r1 = r1 * r2)
MUL16		$49			REGISTER			3 Bytes (opcode + register + register) (r1 = r1 * r2)
ANDA		$4A			IMMEDIATE			2 Bytes (opcode + 8-bit number)
ANDB		$4B			IMMEDIATE			2 Bytes (opcode + 8-bit number)
ANDD		$4C			IMMEDIATE			3 Bytes (opcode + 16-bit number)
ANDX		$4D			IMMEDIATE			3 Bytes (opcode + 16-bit number)
ANDY		$4E			IMMEDIATE			3 Bytes (opcode + 16-bit number)
ANDA		$4F			REGISTER			2 Bytes (opcode + register)
ANDB		$50			REGISTER			2 Bytes (opcode + register)
ANDD		$51			REGISTER			2 Bytes (opcode + register)
ANDX		$52			REGISTER			2 Bytes (opcode + register)
ANDY		$53			REGISTER			2 Bytes (opcode + register)
ORA			$54			IMMEDIATE			2 Bytes (opcode + 8-bit number)
ORB			$55			IMMEDIATE			2 Bytes (opcode + 8-bit number)
ORD			$56			IMMEDIATE			3 Bytes (opcode + 16-bit number)
ORX			$57			IMMEDIATE			3 Bytes (opcode + 16-bit number)
ORY			$58			IMMEDIATE			3 Bytes (opcode + 16-bit number)
ORA			$59			REGISTER			2 Bytes (opcode + register)
ORB			$5A			REGISTER			2 Bytes (opcode + register)
ORD			$5B			REGISTER			2 Bytes (opcode + register)
ORX			$5C			REGISTER			2 Bytes (opcode + register)
ORY			$5D			REGISTER			2 Bytes (opcode + register)
DIV8		$5E			REGISTER			3 Bytes (opcode + register + register) (r1 / r2 --> A = Quotient, B = Remainder)
DIV16		$5F			REGISTER			3 Bytes (opcode + register + register) (r1 / r2 --> X = Quotient, Y = Remainder)
XORA		$60			IMMEDIATE			2 Bytes (opcode + 8-bit number)
XORB		$61			IMMEDIATE			2 Bytes (opcode + 8-bit number)
XORD		$62			IMMEDIATE			3 Bytes (opcode + 16-bit number)
XORX		$63			IMMEDIATE			3 Bytes (opcode + 16-bit number)
XORY		$64			IMMEDIATE			3 Bytes (opcode + 16-bit number)
XORA		$65			REGISTER			2 Bytes (opcode + register)
XORB		$66			REGISTER			2 Bytes (opcode + register)
XORD		$67			REGISTER			2 Bytes (opcode + register)
XORX		$68			REGISTER			2 Bytes (opcode + register)
XORY		$69			REGISTER			2 Bytes (opcode + register)
RND			$6A			REGISTER			2 Bytes (opcode + register) (Random Number between 0 and <register>. Value is stored in <register>)
STCLR	    $6B         IMMEDIATE           1 Byte (opcode) (Set pen color. A = red, B = green, LSB Y = blue)
MVTO	    $6C         IMMEDIATE           1 Byte (opcode) (Moves graphics pen to X, Y)
LNTO        $6D         IMMEDIATE           1 Byte (opcode) (Draws a line from current pen position to X, Y)
NOP         $6E         IMMEDIATE           1 Byte (opcode) (Does absolutely nothing. Used as a filler or to waste time)
NEG         $6F         REGISTER            2 Bytes (opcode + register) (Perfors a negate on the specified register. Inverts all the bits, then adds 1.)


Pseudo Mnemonics
--------------------------------------------------------------------------------
STR			Defines a string surrounded by quotes. The string is directly
            inserted into the B33 file, in the form of ASCII codes, exactly where the STR mnemonic is.
CHR			Defines a single ASCII character. The character is directly inserted
            into the B33 file exactly where the CHR mnemonic is.
RMB			Reserves a memory block. This memory is essesentially "blank space" 
			that is inserted into the program. This memory can be used dynamically
			as "storage" if needed. See sample #08 for an example.